
/* Double call motif:
 *   ((Autogenerated code))
 *   First call creates closure with callback, error callback, and id.
 *   Second calls to the python function @`name`.
 * */
@`name` = function(callback, errorcallback, id) {
    return function(`args`) {
        var star_args, argnames, i, parameters, upper, kwargs;
        upper = arguments.length?`kwargs` - 1`;
        argnames = ``args`;
        star_args = [];
        parameters = {};
        for (i = 0; i < argnames.length; i++) {
            parameters[argnames[i]] = arguments[i];
        }
        while (i < upper) {
            star_args.push(arguments[i]);
            i++;
        }
        if (i < arguments.length) {
            kwargs = arguments[i];
            if (is_hackkit_object(kwargs)) {
                star_args.push(kwargs);
                kwargs = undefined;
            } else {
                parameters.@`kwargs` = kwargs;
            }
        }
        hackkit_jsonp_handler(``method`, params, id, callback, errorcallback);
    };
}
